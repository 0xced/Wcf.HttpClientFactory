<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AwesomeAssertions" Version="8.0.1" />
    <PackageReference Include="coverlet.collector" Version="6.0.4" PrivateAssets="all" />
    <PackageReference Include="MartinCostello.Logging.XUnit" Version="0.5.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="9.0.2" />
    <PackageReference Include="Microsoft.Extensions.Http" Version="9.0.2" />
    <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="9.0.2" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.13.0" />
    <PackageReference Include="NuGet.Versioning" Version="6.13.1" />
    <PackageReference Include="PublicApiGenerator" Version="11.4.2" />
    <PackageReference Include="ReportGenerator" Version="5.4.4" PrivateAssets="all" />
    <PackageReference Include="Testcontainers.Xunit" Version="4.2.0" />
    <PackageReference Include="Verify.Xunit" Version="28.11.0" />
    <PackageReference Include="xunit" Version="2.9.3" />
    <PackageReference Include="Xunit.Combinatorial" Version="1.6.24" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.0.2" PrivateAssets="all" />
    <PackageReference Include="Xunit.SkippableFact" Version="1.5.23" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="PublicApi.*.cs" />
    <None Include="PublicApi.*.cs" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\src\B2BService\B2BService.csproj" />
    <ProjectReference Include="..\src\CalculatorService\CalculatorService.csproj" />
    <ProjectReference Include="..\src\HelloService\HelloService.csproj" />
    <ProjectReference Include="..\src\Wcf.HttpClientFactory\Wcf.HttpClientFactory.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="xunit.runner.json" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>
    <VSTestLogger Include="GitHubActions" Visible="false" Condition="$(ContinuousIntegrationBuild) == 'true'" />
    <VSTestLogger Include="trx%3BLogFileName=TestResults-$(TargetFramework).trx" Visible="false" Condition="$(ContinuousIntegrationBuild) == 'true'" />
    <VSTestLogger Include="html%3BLogFileName=TestResults-$(TargetFramework).html" Visible="false" />
  </ItemGroup>

  <PropertyGroup Label="Coverage">
    <RootDirectory>$([System.IO.Directory]::GetParent($(MSBuildProjectDirectory)))</RootDirectory>
    <CoverageReportDirectory>$([System.IO.Path]::Combine($(RootDirectory),'coverage',$(TargetFramework)))</CoverageReportDirectory>
    <VSTestResultsDirectory Condition="$(ContinuousIntegrationBuild) == 'true'">$(RootDirectory)</VSTestResultsDirectory>
    <VSTestResultsDirectory Condition="$(ContinuousIntegrationBuild) != 'true'">$([System.IO.Path]::Combine($(CoverageReportDirectory),'results'))</VSTestResultsDirectory>
    <VSTestCollect>XPlat Code Coverage</VSTestCollect>
    <VSTestLogger>@(VSTestLogger)</VSTestLogger>
  </PropertyGroup>

  <Target Name="GenerateHtmlCoverageReport" AfterTargets="VSTest" Condition="$(TargetFramework) != ''">
    <ItemGroup>
      <CoverletReport Include="$(VSTestResultsDirectory)/*/coverage.cobertura.xml" />
    </ItemGroup>
    <ReportGenerator ReportFiles="@(CoverletReport)" TargetDirectory="$(CoverageReportDirectory)" ReportTypes="Html;TextSummary" />
  </Target>

  <!-- Because of https://github.com/microsoft/vstest/issues/2378 -->
  <Target Name="MoveCoverletReport" AfterTargets="GenerateHtmlCoverageReport" Condition="$(TargetFramework) != ''">
    <Move SourceFiles="@(CoverletReport)" DestinationFolder="$(CoverageReportDirectory)" />
    <PropertyGroup>
      <CoverletReport>@(CoverletReport)</CoverletReport>
    </PropertyGroup>
    <ItemGroup>
      <CoverletReportParentDirectory Include="$([System.IO.Path]::Combine($(CoverletReport),'..'))" Condition="$(CoverletReport) != ''" />
    </ItemGroup>
    <RemoveDir Directories="@(CoverletReportParentDirectory)" />
  </Target>

  <Target Name="DisplayCoverageSummary" AfterTargets="MoveCoverletReport" Condition="$(TargetFramework) != ''">
    <PropertyGroup>
      <CatCommand Condition="!$([MSBuild]::IsOSPlatform('Windows'))">cat</CatCommand>
      <CatCommand Condition="$([MSBuild]::IsOSPlatform('Windows'))">type</CatCommand>
    </PropertyGroup>
    <Exec WorkingDirectory="$(CoverageReportDirectory)" Command="$(CatCommand) Summary.txt" />
  </Target>

  <Target Name="OpenHtmlCoverageReport" AfterTargets="MoveCoverletReport" Condition="$(TargetFramework) != '' AND $(ContinuousIntegrationBuild) != 'true'">
    <PropertyGroup>
      <OpenCommand Condition="$([MSBuild]::IsOSPlatform('Linux'))">xdg-open</OpenCommand>
      <OpenCommand Condition="$([MSBuild]::IsOSPlatform('OSX'))">open</OpenCommand>
      <OpenCommand Condition="$([MSBuild]::IsOSPlatform('Windows'))">explorer</OpenCommand>
    </PropertyGroup>
    <!-- executing "explorer path\to\index.html" returns exit code 1, so we ignore it -->
    <Exec WorkingDirectory="$(CoverageReportDirectory)" Command="$(OpenCommand) index.html" Condition="$(OpenCommand) != ''" IgnoreExitCode="true" />
  </Target>

</Project>
