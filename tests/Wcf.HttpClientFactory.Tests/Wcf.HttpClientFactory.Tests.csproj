<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="AwesomeAssertions" Version="8.0.2" />
    <PackageReference Include="Azure.Identity" Version="1.13.2" />
    <PackageReference Include="Azure.Security.KeyVault.Secrets" Version="4.7.0" />
    <PackageReference Include="coverlet.collector" Version="6.0.4" PrivateAssets="all" />
    <PackageReference Include="GitHubActionsTestLogger" Version="2.4.1" PrivateAssets="all" />
    <PackageReference Include="MartinCostello.Logging.XUnit.v3" Version="0.5.1" />
    <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" Version="9.0.3" />
    <PackageReference Include="Microsoft.Extensions.Http" Version="9.0.3" />
    <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="9.0.3" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.13.0" />
    <PackageReference Include="NuGet.Versioning" Version="6.13.2" />
    <PackageReference Include="PublicApiGenerator" Version="11.4.5" />
    <PackageReference Include="ReportGenerator" Version="5.4.5" PrivateAssets="all" />
    <PackageReference Include="Testcontainers.XunitV3" Version="4.3.0" />
    <PackageReference Include="Verify.XunitV3" Version="29.1.0" />
    <PackageReference Include="xunit.v3" Version="2.0.0" />
    <PackageReference Include="Xunit.Combinatorial" Version="2.0.24" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.0.2" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="PublicApi.*.cs" />
    <None Include="PublicApi.*.cs" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="../B2BService/B2BService.csproj" />
    <ProjectReference Include="../CalculatorService/CalculatorService.csproj" />
    <ProjectReference Include="../HelloService/HelloService.csproj" />
    <ProjectReference Include="../../src/Wcf.HttpClientFactory/Wcf.HttpClientFactory.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="xunit.runner.json" CopyToOutputDirectory="PreserveNewest" />
  </ItemGroup>

  <ItemGroup>
    <VSTestLogger Include="GitHubActions%3Bsummary.includePassedTests=true%3Bsummary.includeSkippedTests=true" Visible="false" Condition="$(GITHUB_STEP_SUMMARY) != ''" />
    <VSTestLogger Include="trx%3BLogFileName=TestResults-$(TargetFramework).trx" Visible="false" Condition="$(ContinuousIntegrationBuild) == 'true'" />
    <VSTestLogger Include="html%3BLogFileName=TestResults-$(TargetFramework).html" Visible="false" />
  </ItemGroup>

  <PropertyGroup Label="Coverage">
    <RootDirectory>$([MSBuild]::NormalizeDirectory('$(MSBuildProjectDirectory)','..','..'))</RootDirectory>
    <CoverageReportDirectory>$([MSBuild]::NormalizeDirectory($(RootDirectory),'coverage',$(TargetFramework)))</CoverageReportDirectory>
    <VSTestResultsDirectory Condition="$(ContinuousIntegrationBuild) == 'true'">$(RootDirectory)</VSTestResultsDirectory>
    <VSTestResultsDirectory Condition="$(ContinuousIntegrationBuild) != 'true'">$([MSBuild]::NormalizeDirectory($(CoverageReportDirectory),'results'))</VSTestResultsDirectory>
    <VSTestCollect>XPlat Code Coverage</VSTestCollect>
    <VSTestLogger>@(VSTestLogger)</VSTestLogger>
  </PropertyGroup>

  <Target Name="GenerateHtmlCoverageReport" AfterTargets="VSTest" Condition="$(TargetFramework) != ''">
    <ItemGroup>
      <CoverageReport Include="$(VSTestResultsDirectory)/*/coverage.cobertura.xml" />
    </ItemGroup>
    <ReportGenerator ReportFiles="@(CoverageReport)" TargetDirectory="$(CoverageReportDirectory)" ReportTypes="Html;TextSummary" />
  </Target>

  <!-- Because of https://github.com/microsoft/vstest/issues/2378 -->
  <Target Name="MoveCoverageReport" AfterTargets="GenerateHtmlCoverageReport" Condition="$(TargetFramework) != ''">
    <Move SourceFiles="@(CoverageReport)" DestinationFolder="$(CoverageReportDirectory)" />
    <PropertyGroup>
      <CoverageReport>@(CoverageReport)</CoverageReport>
    </PropertyGroup>
    <ItemGroup>
      <CoverageReportParentDirectory Include="$([MSBuild]::NormalizeDirectory($(CoverageReport),'..'))" Condition="$(CoverageReport) != ''" />
    </ItemGroup>
    <RemoveDir Directories="@(CoverageReportParentDirectory)" />
  </Target>

  <Target Name="DisplayCoverageSummary" AfterTargets="MoveCoverageReport" Condition="$(TargetFramework) != ''">
    <PropertyGroup>
      <CatCommand Condition="!$([MSBuild]::IsOSPlatform('Windows'))">cat</CatCommand>
      <CatCommand Condition="$([MSBuild]::IsOSPlatform('Windows'))">type</CatCommand>
    </PropertyGroup>
    <Exec WorkingDirectory="$(CoverageReportDirectory)" Command="$(CatCommand) Summary.txt" />
  </Target>

  <Target Name="OpenHtmlCoverageReport" AfterTargets="MoveCoverageReport" Condition="$(TargetFramework) != '' AND $(ContinuousIntegrationBuild) != 'true'">
    <PropertyGroup>
      <OpenCommand Condition="$([MSBuild]::IsOSPlatform('Linux'))">xdg-open</OpenCommand>
      <OpenCommand Condition="$([MSBuild]::IsOSPlatform('OSX'))">open</OpenCommand>
      <OpenCommand Condition="$([MSBuild]::IsOSPlatform('Windows'))">explorer</OpenCommand>
    </PropertyGroup>
    <!-- executing "explorer path\to\index.html" returns exit code 1, so we ignore it -->
    <Exec WorkingDirectory="$(CoverageReportDirectory)" Command="$(OpenCommand) index.html" Condition="$(OpenCommand) != ''" IgnoreExitCode="true" />
  </Target>

</Project>
